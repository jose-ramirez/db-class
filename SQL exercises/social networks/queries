1.  Find the names of all students who are friends with someone named
    Gabriel.
 
    select name from highschooler 
    where id in (
    	select id1 from friend where id2 in (
            select id from highschooler where name = 'Gabriel'))

2.  For every student who likes someone 2 or more grades younger than 
    themselves, return that student's name and grade, and the name and
    grade of the student they like.

    select distinct h1.name, h1.grade, h2.name, h2.grade from
    highschooler as h1 join highschooler as h2 join likes on
    h1.id = likes.id1 and h2.id = likes.id2 and h1.grade - h2.grade >= 2

3.  For every pair of students who both like each other, return the name
    and grade of both students. Include each pair only once, with the two
    names in alphabetical order.

    select h1.name, h1.grade, h2.name, h2.grade from
    highschooler as h1 join highschooler as h2 join likes on 
    h1.id = id1 and id1 in (select id2 from likes) and
    h2.id = id2 and id2 in (select id1 from likes) and
    h1.name < h2.name

4.  Find all students who do not appear in the Likes table (as a student
    who likes or is liked) and return their names and grades. Sort by
    grade, then by name within each grade.

    select name, grade from highschooler where id in (select id from
    highschooler except select id1 from likes
    except select id2 from likes) order by grade, name;

5.  For every situation where student A likes student B, but we have
    no information about whom B likes (that is, B does not appear as
    an ID1 in the Likes table), return A and B's names and grades.

    select h1.name, h1.grade, h2.name, h2.grade from
    highschooler as h1 join likes join highschooler as h2 on
    h1.id = id1 and h2.id = id2 and id2 not in (select id1 from likes);

6.  Find names and grades of students who only have friends in the same
    grade. Return the result sorted by grade, then by name within each
    grade.

    select name, grade from highschooler except select distinct h1.name,
    h1.grade from highschooler as h1 join friend join highschooler as h2 on
    h1.id = id1 and h2.id = id2 and h1.grade <> h2.grade order by grade, name

7.  For each student A who likes a student B where the two are not friends,
    find if they have a friend C in common (who can introduce them!). For
    all such trios, return the name and grade of A, B, and C. 

    select A.name, A.grade, B.name, B.grade, C.name, C.grade from
    highschooler as A join highschooler as B join highschooler as C join likes as L
    on A.id = L.id1 and B.id = L.id2 and
    A.id not in (select id1 from friend where id2 = B.id) and
    C.id in (select id1 from friend where id2 = A.id) and
    C.id in (select id1 from friend where id2 = B.id)

8.  Find the difference between the number of students in the school
    and the number of different first names. 

    select (select count(name) as total from highschooler) -
    (select count(distinct name) as total from highschooler)

9.  Find the name and grade of all students who are liked by more than
    one other student. 

    select A.name, A.grade from highschooler as A join likes as L on
    A.id = L.id2 group by name having count(name) > 1